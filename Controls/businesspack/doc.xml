<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DotVVM.BusinessPack</name>
    </assembly>
    <members>
        <member name="T:DotVVM.BusinessPack.Controls.Alert">
            <summary>
            Renders a contextual feedback message for users.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.Alert.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.Alert" /> class.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Alert.Text">
            <summary>
            Gets or sets the text displayed inside the Alert box.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Alert.Type">
            <summary>
            Gets or sets the type (color, severity) of the Alert message.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Alert.AllowDismiss">
            <summary>
            Gets or sets whether a close icon should be displayed in the Alert box.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Alert.DismissIconCssClass">
            <summary>
            Gets or sets the CSS class for the close icon displayed when the Alert is dismissible.
            The default value is <see cref="F:DotVVM.BusinessPack.Controls.IconType.FaClose" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Alert.AutoHideTimeout">
            <summary>
            Gets or sets after how many seconds is the Alert message automatically
            hidden. If the value is equal to 0, Alert is not auto-hidden.
            The default value is 0 seconds.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Alert.AnimationDuration">
            <summary>
            Gets or sets how long will the show and hide animations run
            (in seconds). If the value is equal to 0, alert is not animated.
            The default value is 0.25 seconds.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Alert.IsDisplayed">
            <summary>
            Gets or sets the value indicating whether the Alert is actually visible. The value is ignored when
            <see cref="P:DotVVM.Framework.Controls.HtmlGenericControl.Visible" /> property is set to <c>false</c>.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Alert.Dismissed">
            <summary>
            Gets or sets the command triggered when the Alert message is dismissed by user.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Alert.ShowDefaultTypeIcon">
            <summary>
            Gets or sets the value indicating whether the type icon is displayed.
            It's displayed by default.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.AlertTypeExtensions.ToClassName(DotVVM.BusinessPack.Controls.AlertType)">
            <summary>
            Returns a "bp-alert-*" class name.
            </summary>
            <param name="type">The type of Alert message.</param>
            <param name="theme">The Alert theme.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.AlertTypeExtensions.ToFaIconTape(DotVVM.BusinessPack.Controls.AlertType)">
            <summary>
            Returns a "bp-alert-*" class name.
            </summary>
            <param name="type">The type of Alert message.</param>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.AutoComplete">
            <summary>
            Renders an &lt;input&gt; element with support for auto-complete.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.AutoComplete.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.AutoComplete" /> class.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.AutoComplete.Text">
            <summary>
            Gets or sets the text value entered by user.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.AutoComplete.Type">
            <summary>
            Gets or sets the type of the rendered text field. The default value is <see cref="F:DotVVM.BusinessPack.Controls.AutoCompleteType.Text" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.AutoComplete.UpdateTextOnInput">
            <summary>
            Gets or sets whether the <see cref="P:DotVVM.BusinessPack.Controls.AutoComplete.Text" /> property will be updated whenever the value is changed.
            By default, the value is <c>false</c> and the property is updated when the control loses focus.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.AutoCompleteTypeExtensions.ToInputType(DotVVM.BusinessPack.Controls.AutoCompleteType)">
            <summary>
            Returns a value for &lt;input [type]&gt; attribute.
            </summary>
            <param name="type">The type of AutoComplete input.</param>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.BindableObjectBase">
            <summary>
            The base class for BusinessPack bindable objects.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.BindableObjectBase.HtmlFactory">
            <summary>
            Gets the factory used to build HTML structure.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.BindableObjectBase.CanGetValue(DotVVM.Framework.Binding.DotvvmProperty)">
            <summary>
            Returns whether it's safe to get a value of the given property.
            </summary>
            <param name="property">The DotVVM property.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.BindableObjectBase.GetValueOrDefault(DotVVM.Framework.Binding.DotvvmProperty,System.Boolean)">
            <summary>
            Returns a value of the given property. Or a default value when
            the current value is <c>null</c>.
            </summary>
            <param name="property">The property to get the value of.</param>
            <param name="inherit">Indicates whether to return inherited values.</param>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.BusinessPack">
            <summary>
            Contains BusinessPack's attached properties.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.Button">
            <summary>
            Renders the HTML button that is able to trigger a postback.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.Button.OnInit(DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.Button.AddAttributesToRender(DotVVM.Framework.Controls.IHtmlWriter,DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.Calendar">
            <summary>
            Renders a Calendar control which lets the user to select a date.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Calendar.SelectedDate">
            <summary>
            Gets or sets the date selected by user.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.CalendarBase">
            <summary>
            Base class for controls which use date time picker popup.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CalendarBase.SelectionCompleted">
            <summary>
            Gets or sets the command that is called when the user successfully selects or unselects a value.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CalendarBase.Enabled">
            <summary>
            Gets or sets whether the control is enabled and can be modified.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CalendarBase.Mode">
            <summary>
            Gets or sets whether you want the user to pick only date, only time, or both date and time.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CalendarBase.MinDate">
            <summary>
            Gets or sets the lowest date that can be selected by user.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CalendarBase.MaxDate">
            <summary>
            Gets or sets the highest date that can be selected by user.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CalendarBase.ExcludedDays">
            <summary>
            Gets or sets days (or parts of them) which will be excluded from selection.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CalendarBase.ExcludedRanges">
            <summary>
            Gets or sets DateTime ranges which will be excluded from selection.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.RangeCalendar">
            <summary>
            Renders a calendar which lets the user to select the begin and end date.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.RangeCalendar.SelectedStartDate">
            <summary>
            Gets or sets the start of date-time range selected by user.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.RangeCalendar.SelectedEndDate">
            <summary>
            Gets or sets the end of date-time range selected by user. It's always greater than the <see cref="P:DotVVM.BusinessPack.Controls.RangeCalendar.SelectedStartDate" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Carousel.AllowAnimation">
            <summary>
            Gets or sets whether the transitions between the slides should be animated or not.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Carousel.AutoSlideInterval">
            <summary>
            Gets or sets interval (in seconds) of changing slides.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Carousel.Items">
            <summary>
            Gets or sets carousel slides.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.CheckableControlListBase">
            <summary>
            The base class for control rendering a list of <see cref="T:DotVVM.Framework.Controls.CheckableControlBase" /> controls.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.CheckableControlListBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.CheckableControlListBase" /> class.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CheckableControlListBase.EmptyDataTemplate">
            <summary>
            Gets or sets the template which will be displayed when the <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" /> is empty.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CheckableControlListBase.ItemTemplate">
            <summary>
            Gets or sets the template used to render each item in the <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CheckableControlListBase.ItemKeyBinding">
            <summary>
            Gets or sets the binding which retrieves the unique key of a <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" /> item.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CheckableControlListBase.ItemValueBinding">
            <summary>
            Gets or sets the binding which retrieves a value from a checked <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" /> item.
            It retrieves the whole item by default.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CheckableControlListBase.ItemTextBinding">
            <summary>
            Gets or sets the binding which retrieves text from a <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" /> item.
            It retrieves the whole item by default.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CheckableControlListBase.ItemEnabledBinding">
            <summary>
            Gets or sets the binding indicating whether a <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" /> item can be checked.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CheckableControlListBase.Enabled">
            <summary>
            Gets or sets a value indicating whether the control is enabled and can be modified.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CheckableControlListBase.Changed">
            <summary>
            Gets or sets the command that will be triggered when an item is checked / unchecked.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.CheckableControlListBase.OnLoad(DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.CheckableControlListBase.OnPreRender(DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.CheckableControlListBase.AddAttributesToRender(DotVVM.Framework.Controls.IHtmlWriter,DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.CheckableControlListBase.RenderContents(DotVVM.Framework.Controls.IHtmlWriter,DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.CheckableControlListBase.DataBind(DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <summary>
            Binds items from the <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" /> as checkable controls.
            </summary>
            <param name="context">The DotVVM request context.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.CheckableControlListBase.CreateForeachItemComment">
            <summary>
            Returns a <c>foreach</c> comment rendering its contents for each item
            in the <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" />.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.CheckableControlListBase.CreateClientCheckable">
            <summary>
            Returns an <see cref="T:DotVVM.Utils.HtmlElements.IHtmlContainer" /> representing a checkable control rendered on client-side.
            It usually consists of an &lt;input&gt; and &lt;label&gt;.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.CheckableControlListBase.CreateServerCheckable(System.Object[],System.String,System.Int32)">
            <summary>
            Returns a <see cref="T:DotVVM.Framework.Controls.DataItemContainer" /> representing a checkable control rendered on server-side.
            It usually consists of an &lt;input&gt; and &lt;label&gt;.
            </summary>
            <param name="dataSource">An array of items.</param>
            <param name="dataSourceExpression">The expression to access <paramref name="dataSource" /> on client-side.</param>
            <param name="itemIndex">The position of an item in the <paramref name="dataSource" />.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.CheckableControlListBase.CreateLabel">
            <summary>
            Returns an <see cref="T:DotVVM.Utils.HtmlElements.HtmlElement" /> representing label wrapping the checkable &lt;input&gt;.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.CheckableControlListBase.CreateInput">
            <summary>
            Returns an <see cref="T:DotVVM.Utils.HtmlElements.HtmlElement" /> representing a checkable &lt;input&gt; element.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.CheckableControlListBase.CreateTextSpan">
            <summary>
            Returns an <see cref="T:DotVVM.Utils.HtmlElements.HtmlElement" /> rendering the text of an item.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.CheckableControlListBase.GetItemTemplate">
            <summary>
            Returns the <see cref="P:DotVVM.BusinessPack.Controls.CheckableControlListBase.ItemTemplate" /> when it is not <c>null</c>. Otherwise returns a default
            template rendering contents of a property specified by <see cref="P:DotVVM.BusinessPack.Controls.CheckableControlListBase.ItemTextBinding" />.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.CheckableControlListBase.GetControlBinding">
            <summary>
            Returns <see cref="T:DotVVM.BusinessPack.Controls.ControlBindingGroup" /> containing values for control's client-side binding.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.CheckBoxList">
            <summary>
            Renders a control that renders a list of check boxes for a collection and allows the user to select some of them.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CheckBoxList.SelectedValues">
            <summary>
            Gets or sets a collection of values of all items that are checked.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CheckBoxList.ItemCheckedBinding">
            <summary>
            Gets or sets the binding indicating whether a particular item is checked.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.CheckBox">
            <summary>
            Renders the HTML checkbox control.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CheckBox.RenderEmptyLabel">
            <summary>
            Gets or sets whether to render an empty &lt;label&gt; element when the <see cref="P:DotVVM.Framework.Controls.CheckableControlBase.Text" /> is
            empty. It allows to use custom CheckBox themes. The default value is <c>true</c>.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.CheckBox.OnInit(DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.CheckBox.AddAttributesToRender(DotVVM.Framework.Controls.IHtmlWriter,DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.CheckBox.AddAttributesToInput(DotVVM.Framework.Controls.IHtmlWriter)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.CheckBox.RenderBeginTag(DotVVM.Framework.Controls.IHtmlWriter,DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.CheckBox.RenderContents(DotVVM.Framework.Controls.IHtmlWriter,DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.CheckBox.RenderEndTag(DotVVM.Framework.Controls.IHtmlWriter,DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.ClientDataItemContainer">
            <summary>
            Used in <see cref="T:DotVVM.Framework.Controls.ItemsControl" /> to wrap templates rendering each data item on client-side.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ClientDataItemContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.ClientDataItemContainer" /> class.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.ColorPicker">
            <summary>
            Renders a control that allows the users to select a color from a palette.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ColorPicker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.ColorPicker" /> class.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ColorPicker.Placeholder">
            <summary>
            Gets or sets the text displayed when color is not selected.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ColorPicker.SelectedColor">
            <summary>
            Gets or sets the HEX color selected by user.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ColorPicker.SelectedRgbaColor">
            <summary>
            Gets or sets the RGBA color selected by user.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ColorPicker.AllowCustomColors">
            <summary>
            Gets or sets whether colors other than <see cref="P:DotVVM.BusinessPack.Controls.ColorPicker.PredefinedColors" /> can be selected.
            The default value is <c>true</c>.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ColorPicker.AllowAlphaChannel">
            <summary>
            Gets or sets whether translucent colors (with Alpha channel value lower than 1) can be selected.
            The default value is <c>false</c>.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ColorPicker.PredefinedColors">
            <summary>
            Gets or sets an enumeration of predefined HEX colors the user can select from.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ColorPicker.ToggleIconCssClass">
            <summary>
            Gets or sets the CSS class for the icon displayed on the toggle button.
            The default value is <see cref="F:DotVVM.BusinessPack.Controls.IconType.FaChevronDown" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ColorPicker.UnselectIconCssClass">
            <summary>
            Gets or sets the CSS class for the icon displayed on the unselect button.
            The default value is <see cref="F:DotVVM.BusinessPack.Controls.IconType.FaClose" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ColorPicker.EditorSwitchIconCssClass">
            <summary>
            Gets or sets the CSS class for the icon displayed on the button switching RGBA and HEX editors.
            The default value is <see cref="F:DotVVM.BusinessPack.Controls.IconType.FaArrowsV" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ColorPicker.Enabled">
            <summary>
            Gets or sets a value indicating whether the control is enabled and can be modified.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ColorPicker.Changed">
            <summary>
            Gets or sets the command that will be triggered when the value is changed.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.ComboBox">
            <summary>
            Renders a ComboBox control similar to HTML &lt;select&gt; element.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ComboBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.ComboBox" /> class.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ComboBox.Text">
            <summary>
            Gets or sets the text value of the control (useful for searching or creating new items).
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ComboBox.SelectedValue">
            <summary>
            Gets or sets the value of the item selected by user.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ComboBox.ToggleIconCssClass">
            <summary>
            Gets or sets the CSS class for the icon displayed on the toggle button.
            The default value is <see cref="F:DotVVM.BusinessPack.Controls.IconType.FaChevronDown" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ComboBox.UnselectIconCssClass">
            <summary>
            Gets or sets the CSS class for the icon displayed on the unselect button.
            The default value is <see cref="F:DotVVM.BusinessPack.Controls.IconType.FaClose" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ComboBox.LoadItemsMode">
            <summary>
            Gets or sets how are items returned by the <see cref="P:DotVVM.BusinessPack.Controls.ComboBox.LoadItems"/> command processed. 
            They can either be merged with existing items in the <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" />; or they can replace them.
            The default value is <see cref="F:DotVVM.BusinessPack.Controls.LoadItemsMode.Merge"/>.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ComboBox.LoadItems">
            <summary>
            Gets or sets a function used to load additional items from server. For example, it is used
            to search for items on server-side.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ComboBox.AllowNewItem">
            <summary>
            Gets or sets whether it is allowed to create new items from the entered text.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.CommandShortcut">
            <summary>
            Renders a control that triggers a command for a specific combination of keys.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.CommandShortcut.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.CommandShortcut" /> class.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CommandShortcut.Key">
            <summary>
            Gets or sets the shortcut key to be pressed.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CommandShortcut.Ctrl">
            <summary>
            Gets or sets whether the <c>Control</c> key must be pressed together with the <see cref="P:DotVVM.BusinessPack.Controls.CommandShortcut.Key" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CommandShortcut.Alt">
            <summary>
            Gets or sets whether the <c>Alt</c> key must be pressed together with the <see cref="P:DotVVM.BusinessPack.Controls.CommandShortcut.Key" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CommandShortcut.Shift">
            <summary>
            Gets or sets whether the <c>Shift</c> key must be pressed together with the <see cref="P:DotVVM.BusinessPack.Controls.CommandShortcut.Key" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CommandShortcut.Enabled">
            <summary>
            Gets or sets whether the <see cref="P:DotVVM.BusinessPack.Controls.CommandShortcut.Command" /> is triggered when the shortcut is pressed.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CommandShortcut.Command">
            <summary>
            Gets or sets the command triggered when the shortcut is pressed.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.ControlBindingGroup">
            <summary>
            Represents the BusinessPack control binding group.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ControlBindingGroup.Add(DotVVM.Framework.Binding.DotvvmProperty,System.String,System.Boolean)">
            <summary>
            Adds a binding expression related to the given DotVVM <paramref name="property" />.
            </summary>
            <param name="property">The property the binding is related to.</param>
            <param name="expression">The binding expression or value.</param>
            <param name="surroundWithDoubleQuotes">
            Indicates whether to surround the expression with double quotes. Useful for strings.
            </param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ControlBindingGroup.Add(DotVVM.Framework.Controls.DotvvmControl,DotVVM.Framework.Binding.DotvvmProperty,System.Action)">
            <summary>
            Adds a DotVVM <paramref name="property" /> binding with fallback to <paramref name="nullBindingAction" />.
            </summary>
            <param name="control">The control using the property.</param>
            <param name="property">The property to get the binding expression from.</param>
            <param name="nullBindingAction">The fallback action called when the property is not bound.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ControlBindingGroup.AddCommand(DotVVM.Framework.Controls.DotvvmControl,DotVVM.Framework.Binding.DotvvmProperty,System.Boolean,System.Boolean)">
            <summary>
            Adds a DotVVM <paramref name="property" /> command binding.
            </summary>
            <param name="control">The control using the property.</param>
            <param name="property">The property to get the command expression from.</param>
            <param name="useWindowSetTimeout">
            Indicates whether to use <c>setTimeout()</c> when executing the command.
            It will execute the function asynchronously.
            </param>
            <param name="isOnChange">
            Indicates whether the command can execute when ViewModel is updating.
            </param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ControlBindingGroup.AddCommand(System.String,DotVVM.Framework.Controls.DotvvmControl,DotVVM.Framework.Binding.DotvvmProperty,System.Boolean,System.Boolean)">
            <summary>
            Adds a DotVVM <paramref name="property" /> command binding.
            </summary>
            <param name="name">The name of the binding.</param>
            <param name="control">The control using the property.</param>
            <param name="property">The property to get the command expression from.</param>
            <param name="useWindowSetTimeout">
            Indicates whether to use <c>setTimeout()</c> when executing the command.
            It will execute the function asynchronously.
            </param>
            <param name="isOnChange">
            Indicates whether the command can execute when ViewModel is updating.
            </param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ControlBindingGroup.AddCommandReturningPromise(DotVVM.Framework.Controls.DotvvmControl,DotVVM.Framework.Binding.DotvvmProperty,System.Boolean,System.Boolean)">
            <summary>
            Adds a DotVVM <paramref name="property" /> command binding returning <c>DotvvmPromise</c>.
            </summary>
            <param name="control">The control using the property.</param>
            <param name="property">The property to get the command expression from.</param>
            <param name="isOnChange">
            Indicates whether the command can execute when ViewModel is updating.
            </param>
            <param name="replaceData">
            A value indicating whether to replace <c>$data</c> with custom argument.
            </param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ControlBindingGroup.AddCommandReturningPromise(System.String,DotVVM.Framework.Controls.DotvvmControl,DotVVM.Framework.Binding.DotvvmProperty,System.Boolean,System.Boolean)">
            <summary>
            Adds a DotVVM <paramref name="property" /> command binding returning <c>DotvvmPromise</c>.
            </summary>
            <param name="name">The name of the binding.</param>
            <param name="control">The control using the property.</param>
            <param name="property">The property to get the command expression from.</param>
            <param name="isOnChange">
            Indicates whether the command can execute when ViewModel is updating.
            </param>
            <param name="replaceData">
            A value indicating whether to replace <c>$data</c> with custom argument.
            </param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ControlBindingGroup.AddValue``1(DotVVM.Framework.Binding.DotvvmProperty,``0)">
            <summary>
            Adds a value binding expression related to the given DotVVM <paramref name="property" />.
            It will properly handle boolean, enum and other values.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="property">The property the binding is related to.</param>
            <param name="value">The binding value.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ControlBindingGroup.AddValue``1(System.String,``0)">
            <summary>
            Adds a value binding expression. It will properly handle boolean,
            enum and other values.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="name">The binding name.</param>
            <param name="value">The binding value.</param>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.DataPager">
            <summary>
            Renders the pagination control which can be integrated with the GridViewDataSet
            object to provide the pageOptions capabilities.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.DateTimePicker">
            <summary>
            Renders a DateTimePicker control which lets the user either to type the date, or select it
            from a calendar popup.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DateTimePicker.SelectedDate">
            <summary>
            Gets or sets the date selected by user.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.DateTimePopup">
            <summary>
            Base class for controls which use date time picker popup.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DateTimePopup.FormatString">
            <summary>
            Gets or sets the format string that will be used to display the date.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DateTimePopup.ClosePopupOnSelectionComplete">
            <summary>
            Gets or sets whether the popup should be hidden when the user completes the selection.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.DateTimePopup.CreateInputPart">
            <summary>
            Creates left part (part when input is) of the date time picker control.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.DateTimePopup.CreateIconPart">
            <summary>
            Creates right part (part when icon is) of the date time picker control.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.DateTimeRangePicker">
            <summary>
            Renders a DateTimeRangePicker control which lets the user either to type the start date or end date, or select them
            from a calendar popup.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DateTimeRangePicker.SelectedStartDate">
            <summary>
            Gets or sets the start of date-time range selected by user.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DateTimeRangePicker.SelectedEndDate">
            <summary>
            Gets or sets the end of date-time range selected by user. It's always greater than the <see cref="P:DotVVM.BusinessPack.Controls.DateTimeRangePicker.SelectedStartDate" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DateTimeRangePicker.SeparatorText">
            <summary>
            Gets or sets the string which is used to separate the inputs.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.DateTimeRangePicker.CreateInputPart">
            <summary>
            Creates two inputs separated by separator.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.DecoratorBase">
            <summary>
            The base class for BusinessPack decorators. It registers BusinessPack 
            resources in OnInit phase.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.DecoratorBase.OnInit(DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.DecoratorBase.CanGetValue(DotVVM.Framework.Binding.DotvvmProperty)">
            <summary>
            Returns whether it's safe to get a value of the given property.
            </summary>
            <param name="property">The DotVVM property.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.DotvvmBindableObjectExtensions.SetClientValueBinding``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
            <summary>
            Sets a client-side value binding to the specified property. The binding can't be executed on server.
            </summary>
            <typeparam name="TControl">The type of the control.</typeparam>
            <typeparam name="TProperty">The type of the property.</typeparam>
            <param name="control">The DotVVM control.</param>
            <param name="property">The property to set the binding to.</param>
            <param name="bindingExpression">The binding expression.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.DotvvmBindableObjectExtensions.SetClientValueBinding(DotVVM.Framework.Controls.DotvvmBindableObject,DotVVM.Framework.Binding.DotvvmProperty,System.String)">
            <summary>
            Sets a client-side value binding to the specified property. The binding can't be executed on server.
            </summary>
            <param name="control">The DotVVM control.</param>
            <param name="property">The property to set the binding to.</param>
            <param name="bindingExpression">The binding expression.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.DotvvmBindableObjectExtensions.SetClientCommandBinding``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
            <summary>
            Sets a client-side command binding to the specified property. The binding can't be executed on server.
            </summary>
            <typeparam name="TControl">The type of the control.</typeparam>
            <typeparam name="TProperty">The type of the property.</typeparam>
            <param name="control">The DotVVM control.</param>
            <param name="property">The property to set the binding to.</param>
            <param name="commandExpression">The command expression.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.DotvvmBindableObjectExtensions.SetClientCommandBinding(DotVVM.Framework.Controls.DotvvmBindableObject,DotVVM.Framework.Binding.DotvvmProperty,System.String)">
            <summary>
            Sets a client-side command binding to the specified property. The binding can't be executed on server.
            </summary>
            <param name="control">The DotVVM control.</param>
            <param name="property">The property to set the binding to.</param>
            <param name="commandExpression">The command expression.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.DotvvmPropertyExtensions.GetBindingName(DotVVM.Framework.Binding.DotvvmProperty)">
            <summary>
            Returns a binding name for the property (eg. it returns "text" for TextProperty).
            </summary>
            <param name="property">The DotVVM property.</param>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.DraggableList">
            <summary>
            A list of items with drag &amp; drop support.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DraggableList.ItemDropped">
            <summary>
            Gets or sets the command that will be triggered when the item is dropped.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DraggableList.MaxItemsCount">
            <summary>
            Gets or sets the maximum number of items that can be added in the collection.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DraggableList.GroupName">
            <summary>
            Gets or sets the name of the group of the draggable items. If you have multiple DraggableList controls with the same GroupName, 
            the items can be moved between these lists.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DraggableList.ItemTemplate">
            <summary>
            Gets or sets the template for the items in the collection.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.DropDownList">
            <summary>
            Renders a DropDownList control similar to HTML &lt;select&gt; element.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.DropDownList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.DropDownList" /> class.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DropDownList.SelectedValue">
            <summary>
            Gets or sets the value of the item selected by user.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DropDownList.SelectedValueTemplate">
            <summary>
            Gets or sets the template for the item selected by user.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DropDownList.ToggleIconCssClass">
            <summary>
            Gets or sets the CSS class for the icon displayed on the toggle button.
            The default value is <see cref="F:DotVVM.BusinessPack.Controls.IconType.FaChevronDown" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DropDownList.UnselectIconCssClass">
            <summary>
            Gets or sets the CSS class for the icon displayed on the unselect button.
            The default value is <see cref="F:DotVVM.BusinessPack.Controls.IconType.FaClose" />.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.EditableLiteral">
            <summary>
            Renders a EditableLiteral control which can be edited by mouse click
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.EditableLiteral.Text">
            <summary>
            Gets or sets the text displayed in the control.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.EditableLiteral.FormatString">
            <summary>
            Gets or sets the format string that will be applied to numeric or date-time values.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.EditableLiteral.ValueType">
            <summary>
            Gets or sets the type of value being formatted - Number or DateTime.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.EditableLiteral.RenderSpanElement">
            <summary>
            Gets or sets whether the literal should render the wrapper span HTML element.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.FAIcon">
            <summary>
            Renders a FontAwesome (http://fontawesome.io/) icon.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.FAIcon.Icon">
            <summary>
            Gets or sets the type of the FontAwesome icon.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.FAIconTypeExtensions.ToClassName(DotVVM.BusinessPack.Controls.FAIconType)">
            <summary>
            Returns a "fa fa-*" class name.
            </summary>
            <param name="type">The type of FontAwesome icon.</param>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.FileUpload">
            <summary>
            Renders a FileUpload control supporting HTML 5 upload features (drag &amp; drop, directory upload, 
            image previews, etc.).
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.FileUpload.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.FileUpload" /> class.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.FileUpload.Data">
            <summary>
            Gets or sets the file upload data (e.g. list of uploaded files, upload progress).
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.FileUpload.AllowMultipleFiles">
            <summary>
            Gets or sets whether the user can select multiple files at once. It is enabled by default.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.FileUpload.AllowedFileTypes">
            <summary>
            Gets or sets the types of files that the server accepts. It must be a comma-separated list of unique content type
            specifiers (eg. ".jpg,image/png,audio/*").
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.FileUpload.MaxFileSize">
            <summary>
            Gets or sets the maximum size of files in megabytes (MB). The size is not limited by default.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.FileUpload.DropTemplate">
            <summary>
            Gets or sets the template displayed when files are dragged over the control.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.FileUpload.UploadButtonText">
            <summary>
            Gets or sets the text on the upload button. The default value is "Select files".
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.FileUpload.DragFilesHereText">
            <summary>
            Gets or sets the text informing about drag&amp;drop upload; usually display next to the upload button. The default
            value is "or drag them here.".
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.FileUpload.GenericErrorText">
            <summary>
            Gets or sets the text displayed when a generic / unknown error occurs. The default value is "Upload has failed.".
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.FileUpload.DeleteIconCssClass">
            <summary>
            Gets or sets the CSS class for the icon displayed on the button used to delete uploaded files.
            The default value is <see cref="F:DotVVM.BusinessPack.Controls.IconType.FaRemove" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.FileUpload.UploadCompleted">
            <summary>
            Gets or sets a command that is triggered when the upload is complete.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.FileUpload.Enabled">
            <summary>
            Gets or sets a value indicating whether the control is enabled and can be modified.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.FileUpload.OnInit(DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.FileUpload.AddAttributesToRender(DotVVM.Framework.Controls.IHtmlWriter,DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.FileUpload.RenderContents(DotVVM.Framework.Controls.IHtmlWriter,DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.UploadData">
            <summary>
            Holds data related to file uploads (eg. list of uploaded files, upload progress).
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.UploadData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.UploadData" /> class.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.UploadData.Progress">
            <summary>
            Gets or sets the progress of the current file upload.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.UploadData.IsBusy">
            <summary>
            Gets or sets whether a file is currently being uploaded.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.UploadData.Files">
            <summary>
            Gets or sets the list of files selected to be uploaded. Use <see cref="P:DotVVM.BusinessPack.Controls.UploadFile.IsUploaded" /> property
            to find files that have already been uploaded.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.UploadData.ErrorMessage">
            <summary>
            Gets or sets the error message when something goes wrong.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.UploadData.Clear">
            <summary>
            Clears the file upload data.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.UploadFile">
            <summary>
            The file selected by user to be uploaded.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.UploadFile.PreviewUrl">
            <summary>
            Gets or sets the URL of an image file preview.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.UploadFile.IsUploaded">
            <summary>
            Gets or sets whether the file is uploaded.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.Filter">
            <summary>
            The base class for filter conditions and groups.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Filter.Type">
            <summary>
            Gets the type of the filter. It's required to properly deserialize filters
            from JSON (see <see cref="T:DotVVM.BusinessPack.Controls.FilterJsonConverter" />).
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.FilterableField">
            <summary>
            Defines a field that can be used to build complex filters.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.FilterableField.Name">
            <summary>
            Gets or sets the name matching the field in database.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.FilterableField.DisplayText">
            <summary>
            Gets or sets the name displayed to users in <see cref="T:DotVVM.BusinessPack.Controls.FilterBuilder" /> control.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.FilterableField.DataType">
            <summary>
            Gets or sets the data type to determine the set of operators to use.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.FilterBuilder">
            <summary>
            Renders a FilterBuilder control allowing to build complex data filters.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.FilterBuilder.Fields">
            <summary>
            Gets or sets an enumeration of filterable fields (properties).
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.FilterBuilder.Filter">
            <summary>
            Gets or sets the data filter built using the provided <see cref="P:DotVVM.BusinessPack.Controls.FilterBuilder.Fields" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.FilterBuilder.HierarchyDepth">
            <summary>
            Gets or sets the maximum depth of filter hierarchy. The default value is 0 which means infinite hierarchy.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.FilterBuilder.Changed">
            <summary>
            Gets or sets the command that will be triggered when the filter is changed.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.FilterBuilderExtensions.Where``1(System.Collections.Generic.IEnumerable{``0},DotVVM.BusinessPack.Controls.Filter)">
            <summary>
            Filters a sequence of values based on the given filter.
            </summary>
            <typeparam name="TSource">The type of elements of source.</typeparam>
            <param name="source">An enumeration to filter.</param>
            <param name="filter">The filter to match against each element.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.FilterBuilderExtensions.Where``1(System.Linq.IQueryable{``0},DotVVM.BusinessPack.Controls.Filter)">
            <summary>
            Filters a sequence of values based on the given filter.
            </summary>
            <typeparam name="TSource">The type of elements of source.</typeparam>
            <param name="source">An enumeration to filter.</param>
            <param name="filter">The filter to match against each element.</param>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.FilterCondition">
            <summary>
            The condition to match against filtered objects.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.FilterCondition.Field">
            <summary>
            Gets or sets name of the field.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.FilterCondition.Operator">
            <summary>
            Gets or sets the binary operator to apply.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.FilterCondition.Value">
            <summary>
            Gets or sets the value to match.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.FilterGroup">
            <summary>
            The group containing nested conditions and groups.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.FilterGroup.Logic">
            <summary>
            Gets or sets the logic applied on filters in this group.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.FilterGroup.Filters">
            <summary>
            Gets or sets the list of nested conditions and groups.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.FilterGroup.Empty">
            <summary>
            Returns whether the group contains any conditions or not.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.FilterJsonConverter">
            <summary>
            Converts JSON to one of possible <see cref="T:DotVVM.BusinessPack.Controls.Filter" /> implementations based on <see cref="P:DotVVM.BusinessPack.Controls.Filter.Type" /> property.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.FilterJsonConverter.CanWrite">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.FilterJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.FilterJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.FilterJsonConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.FilterPredicateBuilder`1">
            <summary>
            Builds a predicate expression from an <see cref="T:DotVVM.BusinessPack.Controls.Filter" />.
            </summary>
            <typeparam name="T">The type of filtered objects.</typeparam>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.FilterPredicateBuilder`1.BuildPredicate(DotVVM.BusinessPack.Controls.Filter)">
            <summary>
            Builds a predicate expression from the given <see cref="T:DotVVM.BusinessPack.Controls.Filter" />.
            </summary>
            <param name="filter">The filter to match objects of type <typeparamref name="T" />.</param>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.GridViewKeyboardActionsDecorator">
            <summary>
            Adds keyboard navigation functionality over clickable-row grid view.<br/>
            It uses <see cref="T:DotVVM.BusinessPack.Controls.DefaultGridViewRowClickDecorator"/> if no Decorator in GridView's RowDecorators has command binding for Events.Click property.<br/>
            <br/>
            Supported actions:<br/>
            - Up arrow key - selects previous row<br/>
            - Down arrow key - selects next row<br/>
            - Page Up key - selects first row<br/>
            - Page Down key - selects last row
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewKeyboardActionsDecorator.Enabled">
            <summary>
            Gets or sets value indicating whether keyboard action can be performed.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewKeyboardActionsDecorator.SelectedRowElementSelector">
            <summary>
            Gets or sets selector for selected row element. Actions are performed relative to this element.<br/>
            See https://api.jquery.com/category/selectors/ for more information about selectors.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.DefaultGridViewRowClickDecorator">
            <summary>
            Decorator for GridView clickable rows.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.GridViewUserSettingsEditor">
            <summary>
            Renders a control allowing users to edit GridView settings (show / hide columns, etc.).
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.GridViewUserSettingsEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.GridViewUserSettingsEditor" /> class.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewUserSettingsEditor.UserSettings">
            <summary>
            Gets or sets the <see cref="T:DotVVM.BusinessPack.Controls.GridViewUserSettings" /> instance to edit.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.GridViewUserSettingsEditor.AddAttributesToRender(DotVVM.Framework.Controls.IHtmlWriter,DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.GridViewUserSettingsEditor.RenderContents(DotVVM.Framework.Controls.IHtmlWriter,DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.GridViewUserSettingsEditor.CreateColumnList">
            <summary>
            Returns an <see cref="T:DotVVM.Utils.HtmlElements.HtmlElement" /> rendering list of checkable columns.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.GridViewUserSettingsEditor.CreateColumnItem">
            <summary>
            Returns an <see cref="T:DotVVM.Utils.HtmlElements.HtmlElement" /> rendering a checkable column.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.GridViewUserSettingsEditor.CreateColumnCheckBox">
            <summary>
            Returns a <see cref="T:DotVVM.BusinessPack.Controls.CheckBox" /> used to show or hide columns.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.GridViewUserSettingsEditor.GetControlBinding">
            <summary>
            Returns <see cref="T:DotVVM.BusinessPack.Controls.ControlBindingGroup" /> containing values for control's binding.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.GridView">
            <summary>
            A multi-purpose grid control with advanced binding and templating options and sorting support.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridView.FilterPlacement">
            <summary>
            Gets or sets the place where the filters will be created.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridView.EmptyDataTemplate">
            <summary>
            Gets or sets the template which will be displayed when the DataSource is empty.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridView.Columns">
            <summary>
            Gets or sets a collection of columns that will be placed inside the grid.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridView.RowDecorators">
            <summary>
            Gets or sets a list of decorators that will be applied on each row which is not in the edit mode.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridView.EditRowDecorators">
            <summary>
            Gets or sets a list of decorators that will be applied on each row which is in edit mode.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridView.InsertRowDecorators">
            <summary>
            Gets or sets a list of decorators that will be applied on insert row.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridView.SortChanged">
            <summary>
            Gets or sets the command that will be triggered when the user changed the sort order.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridView.ShowHeaderWhenNoData">
            <summary>
            Gets or sets whether the header row should be displayed when the grid is empty.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridView.InlineEditing">
            <summary>
            Gets or sets whether the inline editing is allowed in the Grid. If so, you have to use a GridViewDataSet as the
            DataSource.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridView.ShowFooter">
            <summary>
            Gets or sets whether the footer should be displayed or not
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridView.InlineInserting">
            <summary>
            Gets or sets whether the insert row should be rendered in the Grid. If so, you have to use a BusinessPackDataSet as
            the DataSource.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridView.InlineInsertRowPlacement">
            <summary>
            Gets or sets whether the insert row should be rendered in the Grid. If so, you have to use a BusinessPackDataSet as
            the DataSource.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridView.UserSettings">
            <summary>
            Gets or sets the user's GridView settings. It can be used to persist column visibility, order, width, etc.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridView.AllowReorderColumns">
            <summary>
            Gets or sets whether it is allowed to change order of GridView columns.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridView.FreezeHeaderRow">
            <summary>
            Gets or sets whether the header row is freezed and is always visible.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.GridViewCheckBoxColumn">
            <summary>
            A GridView column which renders a bool value and can edit it in the CheckBox control.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewCheckBoxColumn.ValueBinding">
            <summary>
            Gets or sets a binding which retrieves the value to display from the current data item.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewColumn.Visible">
            <summary>
            Gets or sets whether this column is visible.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewColumn.ColumnName">
            <summary>
            Gets or sets the unique name of the column. It's used to persist user's settings (visibility, order, width, etc.).
            </summary>
            <remarks>
            You always need to set the name of the <see cref="T:DotVVM.BusinessPack.Controls.GridViewTemplateColumn"/>. For other types of columns we try to infer the name based on their properties.
            </remarks>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewColumn.HeaderText">
            <summary>
            Gets or sets the text of the column header. This property cannot be
            combined with the <see cref="P:DotVVM.BusinessPack.Controls.GridViewColumn.HeaderTemplate" /> property.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewColumn.HeaderTemplate">
            <summary>
            Gets or sets a template for the column header. This property cannot be
            combined with the <see cref="P:DotVVM.BusinessPack.Controls.GridViewColumn.HeaderText" /> property.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewColumn.FilterTemplate">
            <summary>
            Gets or sets the template used to render "filter" UI displayed in the header or a separate row.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewColumn.SortExpression">
            <summary>
            Gets or sets the expression used to sort the underlying data source.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewColumn.SortAscendingHeaderCssClass">
            <summary>
            Gets or sets the CSS class used when the data are sorted by this column in ascending order.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewColumn.SortDescendingHeaderCssClass">
            <summary>
            Gets or sets the CSS class used when the data are sorted by this column in ascending order.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewColumn.AllowSorting">
            <summary>
            Gets or sets whether data can be sorted by this column.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewColumn.CssClass">
            <summary>
            Gets or sets the CSS class used for cells in this column.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewColumn.InsertCssClass">
            <summary>
            Gets or sets the CSS class used for cell in this column in the insert row.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewColumn.EditCssClass">
            <summary>
            Gets or sets the CSS class used for cells in this column that are in edit mode.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewColumn.IsEditable">
            <summary>
            Gets or sets whether the value displayed in this column can be edited.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewColumn.HeaderCssClass">
            <summary>
            Gets or sets the CSS class used for the header cell.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewColumn.Width">
            <summary>
            Gets or sets the width of this column (all CSS values are supported).
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewColumn.FooterTemplate">
            <summary>
            Gets or sets a template for the column footer.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewColumn.FooterCssClass">
            <summary>
            Gets or sets the CSS class used for the footer cell.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.GridViewColumnSettings">
            <summary>
            Represents GridView column settings (visibility, width, etc.).
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewColumnSettings.ColumnName">
            <summary>
            Gets or sets the unique name of the column.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewColumnSettings.DisplayOrder">
            <summary>
            Gets or sets the value used to sort displayed columns.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewColumnSettings.DisplayText">
            <summary>
            Gets or sets the text displayed in GridView's header.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewColumnSettings.Visible">
            <summary>
            Gets or sets whether the column is displayed in GridView.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewColumnSettings.Width">
            <summary>
            Gets or sets the width of column set by user.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.GridViewComboBoxColumn">
            <summary>
            The GridView column rendering a value that can be edited by selecting an item from
            the <see cref="T:DotVVM.BusinessPack.Controls.ComboBox" /> controls.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewComboBoxColumn.Placeholder">
            <summary>
            Gets or sets the text displayed when no item is selected (or when text is empty).
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewComboBoxColumn.DataSourceBinding">
            <summary>
            Gets or sets the source collection for <see cref="T:DotVVM.BusinessPack.Controls.ComboBox" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewComboBoxColumn.TextBinding">
            <summary>
            Gets or sets a binding which retrieves the text value to be displayed.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewComboBoxColumn.ValueBinding">
            <summary>
            Gets or sets a binding which retrieves the value of item selected in ComboBox.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewComboBoxColumn.ItemTemplate">
            <summary>
            Gets or sets the template used to render each item in the <see cref="P:DotVVM.BusinessPack.Controls.GridViewComboBoxColumn.DataSourceBinding" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewComboBoxColumn.ItemKeyBinding">
            <summary>
            Gets or sets the binding which retrieves the unique key of a <see cref="P:DotVVM.BusinessPack.Controls.GridViewComboBoxColumn.DataSourceBinding" /> item.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewComboBoxColumn.ItemTextBinding">
            <summary>
            Gets or sets the binding which retrieves the text from a <see cref="P:DotVVM.BusinessPack.Controls.GridViewComboBoxColumn.DataSourceBinding" /> item.
            It retrieves the whole item by default.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewComboBoxColumn.ItemValueBinding">
            <summary>
            Gets or sets the binding which retrieves a value from a <see cref="P:DotVVM.BusinessPack.Controls.GridViewComboBoxColumn.DataSourceBinding" /> property.
            It retrieves the whole item by default.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewComboBoxColumn.AllowNewItem">
            <summary>
            Gets or sets whether it is allowed to create new items from the text entered in ComboBox.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.GridViewComboBoxColumn.CreateControls(DotVVM.Framework.Hosting.IDotvvmRequestContext,DotVVM.Utils.HtmlElements.HtmlElement)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.GridViewComboBoxColumn.CreateEditControls(DotVVM.Framework.Hosting.IDotvvmRequestContext,DotVVM.Utils.HtmlElements.HtmlElement)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.GridViewComboBoxColumn.CreateInsertControls(DotVVM.Framework.Hosting.IDotvvmRequestContext,DotVVM.Utils.HtmlElements.HtmlElement)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.GridViewComboBoxColumn.CreateComboBox">
            <summary>
            Creates a <see cref="T:DotVVM.BusinessPack.Controls.ComboBox" /> control used to edit column's value.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewTemplateColumn.ContentTemplate">
            <summary>
            Gets or sets the template for the cell content.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewTemplateColumn.EditTemplate">
            <summary>
            Gets or sets the template for the edit-mode content.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewTemplateColumn.InsertTemplate">
            <summary>
            Gets or sets the template for the insert row content.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.GridViewTextColumn">
            <summary>
            A GridView column which renders a text value (with formatting support) and can edit it in the TextBox control.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewTextColumn.FormatString">
            <summary>
            Gets or sets the format string that will be applied to numeric or date-time values.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewTextColumn.ValueType">
            <summary>
            Gets or sets the type of value being formatted - Number or DateTime.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewTextColumn.ValueBinding">
            <summary>
            Gets or sets a binding which retrieves the value to display from the current data item.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.GridViewUserSettings">
            <summary>
            Represents user's GridView settings (visibility of column, etc.).
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.GridViewUserSettings.ColumnsSettings">
            <summary>
            Gets or sets a list of GridView columns and their settings.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.HierarchyItemsControlBase">
            <summary>
            The base class for BusinessPack controls operating on a hierarchical collection.
            It registers BusinessPack resources in OnInit phase.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HierarchyItemsControlBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.HierarchyItemsControlBase" /> class.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HierarchyItemsControlBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.HierarchyItemsControlBase" /> class.
            </summary>
            <param name="tagName">The name of the wrapping tag.</param>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.HierarchyItemsControlBase.ItemChildrenBinding">
            <summary>
            Gets or sets the binding which retrieves children of a <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" /> item.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.HierarchyItemsControlBase.LevelTemplateName">
            <summary>
            Gets the name of a template used to render hierarchy on client-side.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HierarchyItemsControlBase.DataBindHierarchy">
            <summary>
            Binds items from the <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" /> as hierarchy.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HierarchyItemsControlBase.CreateContents">
            <summary>
            Returns contents of the control to be used when <see cref="P:DotVVM.Framework.Controls.DotvvmBindableObject.RenderOnServer" /> is <c>false</c>.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HierarchyItemsControlBase.CreateLevelTemplate">
            <summary>
            Returns the template used to render hierarchy on client-side.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HierarchyItemsControlBase.CreateIfAnyDataComment">
            <summary>
            Returns an <c>if</c> comment checking whether <c>$data</c> contains any items.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HierarchyItemsControlBase.CreateClientLevel">
            <summary>
            Returns an <see cref="T:DotVVM.Utils.HtmlElements.IHtmlContainer" /> representing a hierarchy level rendered on client-side.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HierarchyItemsControlBase.CreateServerLevel(System.Object[],System.String)">
            <summary>
            Returns an <see cref="T:DotVVM.Utils.HtmlElements.IHtmlContainer" /> representing a hierarchy level rendered on server-side.
            </summary>
            <param name="dataSource">An array of hierarchy items.</param>
            <param name="dataSourceExpression">The expression to access <paramref name="dataSource" /> on client-side.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HierarchyItemsControlBase.CreateLevelWrapper">
            <summary>
            Returns an <see cref="T:DotVVM.Utils.HtmlElements.IHtmlContainer" /> that wraps each hierarchy level.
            By default it returns an <see cref="T:DotVVM.Utils.HtmlElements.HtmlContents" /> container.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HierarchyItemsControlBase.CreateClientItem">
            <summary>
            Returns a <see cref="T:DotVVM.Framework.Controls.DataItemContainer" /> representing a hierarchy item rendered on client-side.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HierarchyItemsControlBase.CreateServerItem(System.Object[],System.String,System.Int32)">
            <summary>
            Returns a <see cref="T:DotVVM.Framework.Controls.DataItemContainer" /> representing a hierarchy item rendered on server-side.
            </summary>
            <param name="dataSource">An array of hierarchy items.</param>
            <param name="dataSourceExpression">The expression to access <paramref name="dataSource" /> on client-side.</param>
            <param name="itemIndex">The position of an item in the <paramref name="dataSource" />.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HierarchyItemsControlBase.CreateItemWrapper">
            <summary>
            Returns an <see cref="T:DotVVM.Utils.HtmlElements.IHtmlContainer" /> that wraps each hierarchy item.
            By default it returns an <see cref="T:DotVVM.Utils.HtmlElements.HtmlContents" /> container.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HierarchyItemsControlBase.CreateItemContents(DotVVM.Framework.Controls.DataItemContainer)">
            <summary>
            Returns contents of the given hierarchy item.
            </summary>
            <param name="dataItem">The hierarchy item.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HierarchyItemsControlBase.CreateLevelTemplateComment">
            <summary>
            Returns a <c>template</c> comment to render the first level of hierarchy on client-side.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HierarchyItemsControlBase.CreateNestedLevel(DotVVM.Framework.Controls.DataItemContainer)">
            <summary>
            Returns an <see cref="T:DotVVM.Utils.HtmlElements.IHtmlContainer" /> representing a nested hierarchy level.
            </summary>
            <param name="parentDataItem">The parent hierarchy item.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HierarchyItemsControlBase.CreateNestedLevelTemplateComment">
            <summary>
            Returns a <c>template</c> comment to render nested levels of hierarchy on client-side.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HierarchyItemsControlBase.GetControlBinding">
            <summary>
            Returns <see cref="T:DotVVM.BusinessPack.Controls.ControlBindingGroup" /> containing values for control's binding.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.HierarchyRepeater">
            <summary>
            Repeats a template for each item in the hierarchical DataSource collection.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HierarchyRepeater.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.HierarchyRepeater" /> class.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.HierarchyRepeater.ItemTemplate">
            <summary>
            Gets or sets the template for each HierarchyRepeater item.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.HierarchyRepeater.EmptyDataTemplate">
            <summary>
            Gets or sets the template which will be displayed when the <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" /> is empty.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.HierarchyRepeater.LevelTagName">
            <summary>
            Gets or sets the name of the tag that wraps each hierarchy level (eg. <c>ul</c>).
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.HierarchyRepeater.ItemTagName">
            <summary>
            Gets or sets the name of the tag that wraps each hierarchy item (eg. <c>li</c>).
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.HtmlControlBase">
            <summary>
            The base class for BusinessPack controls. It registers BusinessPack resources in OnInit phase.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HtmlControlBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.HtmlControlBase" /> class.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HtmlControlBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.HtmlControlBase" /> class.
            </summary>
            <param name="tagName">The name of the wrapping tag.</param>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.HtmlControlBase.HtmlFactory">
            <summary>
            Gets the factory used to build control's HTML structure.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HtmlControlBase.OnInit(DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HtmlControlBase.OnPreRender(DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HtmlControlBase.ValidateControl(DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <summary>
            Validates the control and its properties. Unlike the <c>ControlUsageValidator</c> this method is executed at runtime.
            </summary>
            <param name="context">The DotVVM request context.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HtmlControlBase.AddAttributesToRender(DotVVM.Framework.Controls.IHtmlWriter,DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HtmlControlBase.AddVisibleAttributeOrBinding(DotVVM.Framework.Controls.IHtmlWriter)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HtmlControlBase.CanGetValue(DotVVM.Framework.Binding.DotvvmProperty)">
            <summary>
            Returns whether it's safe to get a value of the given property.
            </summary>
            <param name="property">The DotVVM property.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HtmlControlBase.GetValueOrDefault(DotVVM.Framework.Binding.DotvvmProperty,System.Boolean)">
            <summary>
            Returns a value of the given property. Or a default value when
            the current value is <c>null</c>.
            </summary>
            <param name="property">The property to get the value of.</param>
            <param name="inherit">Indicates whether to return inherited values.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HtmlControlBase.IsInitiallyVisible">
            <summary>
            Returns whether the control is initially visible. If the result is <c>false</c>
            the control is rendered with <c>display: none;</c> style.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.HtmlFactory">
            <summary>
            The factory to build HTML structure of BusinessPack controls.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HtmlFactory.CreateClearFixDiv">
            <summary>
            Creates a <c>&lt;div class="bp-clear-fix"&gt;</c> HTML element.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HtmlFactory.CreateCheckerboard">
            <summary>
            Creates a <c>&lt;div class="bp-checkerboard"&gt;</c> HTML element.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HtmlFactory.CreateIcon(System.String)">
            <summary>
            Creates an <c>&lt;i class="bp-icon"&gt;</c> HTML element.
            </summary>
            <param name="iconCssClass">The icon CSS class.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="iconCssClass" /> is <c>null</c>.</exception>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HtmlFactory.CreateInput">
            <summary>
            Creates an <c>&lt;input class="bp-input"&gt;</c> HTML element.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HtmlFactory.CreateTextBox">
            <summary>
            Creates an <c>&lt;input type="text" class="bp-input bp-text-box"&gt;</c> HTML element.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HtmlFactory.CreateTextArea">
            <summary>
            Creates a <c>&lt;textarea class="bp-input bp-text-area"&gt;</c> HTML element.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HtmlFactory.CreateCheckBox">
            <summary>
            Creates an <c>&lt;input type="checkbox" class="bp-input bp-check-box"&gt;</c> HTML element.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HtmlFactory.CreateRadioButton">
            <summary>
            Creates an <c>&lt;input type="radio" class="bp-input bp-radio-button"&gt;</c> HTML element.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HtmlWriterExtensions.AddControlKnockoutDataBind``1(DotVVM.Framework.Controls.IHtmlWriter,DotVVM.BusinessPack.Controls.ControlBindingGroup)">
            <summary>
            Adds the BusinessPack control binding to the next HTML element that is being rendered.
            </summary>
            <typeparam name="TControl">The type of the control.</typeparam>
            <param name="writer">The HTML writer.</param>
            <param name="bindingGroup">The group of Knockout bindings.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.HtmlWriterExtensions.AddControlKnockoutDataBind(DotVVM.Framework.Controls.IHtmlWriter,System.Type,DotVVM.BusinessPack.Controls.ControlBindingGroup)">
            <summary>
            Adds the BusinessPack control binding to the next HTML element that is being rendered.
            </summary>
            <param name="writer">The HTML writer.</param>
            <param name="controlType">The type of the control.</param>
            <param name="bindingGroup">The group of Knockout bindings.</param>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.IconType">
            <summary>
            Defines CSS classes of all supported icons (FAIcon).
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.CropRectangle">
            <summary>
            A rectangle specifying how to crop an image.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CropRectangle.Left">
            <summary>
            Gets or sets the x-coordinate of the left edge of the rectangle.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CropRectangle.Top">
            <summary>
            Gets or sets the y-coordinate of the top edge of the rectangle.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CropRectangle.Width">
            <summary>
            Gets or sets the width of the crop rectangle (Left + Width = Right).
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.CropRectangle.Height">
            <summary>
            Gets or sets the height of crop rectangle (Top + Height = Bottom).
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.DefaultImageFactory">
            <summary>
            The default image factory based on System.Drawing / GDI+.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.DefaultImageFactory.Load(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.DefaultImageFactory.Apply(DotVVM.BusinessPack.Controls.ImageOperations)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.DefaultImageFactory.Resize(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.DefaultImageFactory.Rotate(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.DefaultImageFactory.Crop(DotVVM.BusinessPack.Controls.CropRectangle)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.DefaultImageFactory.Round(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.DefaultImageFactory.Save(System.IO.Stream,DotVVM.BusinessPack.Controls.ImageFormat)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.DefaultImageFactory.Dispose">
            <summary>
            Releases resources used by the current image.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.IImageFactory">
            <summary>
            The factory providing basic image editing operations (eg, resize, rotate, crop).
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.IImageFactory.Load(System.IO.Stream)">
            <summary>
            Loads the image to process from stream. The image must be loaded before other methods can be called.
            </summary>
            <param name="input">The stream containing the image data. It will not be disposed.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="input" /> is <c>null</c>.
            </exception>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.IImageFactory.Apply(DotVVM.BusinessPack.Controls.ImageOperations)">
            <summary>
            Applies the specified operations to the current image.
            </summary>
            <param name="operations">An object defining image operations to apply.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="operations" /> is <c>null</c>.
            </exception>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.IImageFactory.Resize(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Resizes the current image to the specified dimensions.
            </summary>
            <param name="width">The width of the resized image. If the value is <c>null</c>, it is computed automatically.</param>
            <param name="height">The height of the resized image. If the value is <c>null</c>, it is computed automatically.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="width" /> and <paramref name="height" /> are both <c>null</c>.
            </exception>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.IImageFactory.Rotate(System.Int32)">
            <summary>
            Rotates the current image by the given angle.
            </summary>
            <param name="degrees">The rotation angle.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.IImageFactory.Crop(DotVVM.BusinessPack.Controls.CropRectangle)">
            <summary>
            Crops the current image to the given coordinates.
            </summary>
            <param name="rectangle">The rectangle specifying how to crop the image.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="rectangle" /> is <c>null</c>.
            </exception>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.IImageFactory.Round(System.Int32)">
            <summary>
            Rounds corners of the current image by the given radius.
            </summary>
            <param name="radius">The percentage specifying how to round the image corners.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="radius" /> is less than zero or greater than 50.
            </exception>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.IImageFactory.Save(System.IO.Stream,DotVVM.BusinessPack.Controls.ImageFormat)">
            <summary>
            Saves the current image to stream. The position will be set to the end of stream after the image is saved.
            </summary>
            <param name="output">The stream to save the image data to.</param>
            <param name="format">The result image format.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="output" /> is <c>null</c>.
            </exception>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.ImageCrop">
            <summary>
            Renders an ImageCrop control allowing to zoom, rotate and crop images.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ImageCrop.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.ImageCrop" /> class.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ImageCrop.ImageUrl">
            <summary>
            Gets or sets the URL of an image to crop.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ImageCrop.Operations">
            <summary>
            Gets or sets the operations applied to the image being cropped.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ImageCrop.ForcedCropWidth">
            <summary>
            Gets or sets the forced width of the cropped image. If the <see cref="P:DotVVM.BusinessPack.Controls.ImageCrop.ForcedCropHeight" /> property is not set,
            it is computed automatically (see the <see cref="P:DotVVM.BusinessPack.Controls.ImageCrop.AspectRatio" />).
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ImageCrop.ForcedCropHeight">
            <summary>
            Gets or sets the forced height of the cropped image. If the <see cref="P:DotVVM.BusinessPack.Controls.ImageCrop.ForcedCropWidth" /> property is not set,
            it is computed automatically (see the <see cref="P:DotVVM.BusinessPack.Controls.ImageCrop.AspectRatio" />).
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ImageCrop.ForcedCropRadius">
            <summary>
            Gets or sets the forced radius of the image corners. The value must be
            between 0 and 50 % (both inclusive). It is not set by default.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ImageCrop.AspectRatio">
            <summary>
            Gets or sets the aspect ratio to force when cropping the image (eg. 1:1).
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ImageCrop.SwitchToMovingIconCssClass">
            <summary>
            Gets or sets the CSS class for the icon displayed on the button switching from Cropping mode to Moving mode.
            The default value is <see cref="F:DotVVM.BusinessPack.Controls.IconType.FaArrows" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ImageCrop.SwitchToCroppingIconCssClass">
            <summary>
            Gets or sets the CSS class for the icon displayed on the button switching from Cropping mode to Moving mode.
            The default value is <see cref="F:DotVVM.BusinessPack.Controls.IconType.FaCrop" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ImageCrop.RotateLeftIconCssClass">
            <summary>
            Gets or sets the CSS class for the icon displayed on the rotate-left button.
            The default value is <see cref="F:DotVVM.BusinessPack.Controls.IconType.FaRotateLeft" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ImageCrop.RotateRightIconCssClass">
            <summary>
            Gets or sets the CSS class for the icon displayed on the rotate-right button.
            The default value is <see cref="F:DotVVM.BusinessPack.Controls.IconType.FaRotateRight" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ImageCrop.ZoomInIconCssClass">
            <summary>
            Gets or sets the CSS class for the icon displayed on the zoom-in button.
            The default value is <see cref="F:DotVVM.BusinessPack.Controls.IconType.FaSearchPlus" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ImageCrop.ZoomOutIconCssClass">
            <summary>
            Gets or sets the CSS class for the icon displayed on the zoom-out button.
            The default value is <see cref="F:DotVVM.BusinessPack.Controls.IconType.FaSearchMinus" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ImageCrop.ResetIconCssClass">
            <summary>
            Gets or sets the CSS class for the icon displayed on the reset button.
            The default value is <see cref="F:DotVVM.BusinessPack.Controls.IconType.FaRefresh" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ImageCrop.Changed">
            <summary>
            Gets or sets the command that will be triggered when the image attributes are changed.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ImageFactoryExtensions.Load(DotVVM.BusinessPack.Controls.IImageFactory,System.String)">
            <summary>
            Loads the image to process from file. The image must be loaded before other methods can be called.
            </summary>
            <param name="factory">The image factory.</param>
            <param name="path">The absolute path to the image file.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ImageFactoryExtensions.Load(DotVVM.BusinessPack.Controls.IImageFactory,System.Byte[])">
            <summary>
            Loads the image to process from buffer. The image must be loaded before other methods can be called.
            </summary>
            <param name="factory">The image factory.</param>
            <param name="bytes">The buffer containing the image data.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ImageFactoryExtensions.Crop(DotVVM.BusinessPack.Controls.IImageFactory,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Crops the current image to the given coordinates.
            </summary>
            <param name="factory">The image factory.</param>
            <param name="left">The x-coordinate of the left edge of the rectangle.</param>
            <param name="top">The y-coordinate of the top edge of the rectangle.</param>
            <param name="width">The width of the crop rectangle (Left + Width = Right).</param>
            <param name="height">The height of crop rectangle (Top + Height = Bottom).</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ImageFactoryExtensions.Save(DotVVM.BusinessPack.Controls.IImageFactory,System.String,DotVVM.BusinessPack.Controls.ImageFormat)">
            <summary>
            Saves the current image to file.
            </summary>
            <param name="factory">The image factory.</param>
            <param name="path">The absolute path to the image file.</param>
            <param name="format">The result image format.</param>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.ImageOperations">
            <summary>
            Defines operations applied of an image being cropped.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ImageOperations.Resize">
            <summary>
            Gets or sets the width of the resized image. The image is resized before it is cropped.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ImageOperations.Rotate">
            <summary>
            Gets or sets the degrees indicating image rotation. The image is rotated before it is cropped.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ImageOperations.Crop">
            <summary>
            Gets or sets the rectangle specifying how to crop the image.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ImageOperations.Round">
            <summary>
            Gets or sets a percentage indicating how to round the image corners. The image is rounded after it is cropped.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ImageOperations.ToString">
            <summary>
            Returns a string representation of image operations.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.ItemsControlBase">
            <summary>
            The base class for BusinessPack controls operating on a collection.
            It registers BusinessPack resources in OnInit phase.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ItemsControlBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.ItemsControlBase" /> class.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ItemsControlBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.ItemsControlBase" /> class.
            </summary>
            <param name="tagName">The name of the wrapping tag.</param>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ItemsControlBase.HtmlFactory">
            <summary>
            Gets the factory used to build control's HTML structure.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ItemsControlBase.OnInit(DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ItemsControlBase.OnPreRender(DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ItemsControlBase.ValidateControl(DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <summary>
            Validates the control and its properties. Unlike the <c>ControlUsageValidator</c> this method is executed at runtime.
            It can be used to validate property values.
            </summary>
            <param name="context">The DotVVM request context.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ItemsControlBase.AddAttributesToRender(DotVVM.Framework.Controls.IHtmlWriter,DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ItemsControlBase.AddVisibleAttributeOrBinding(DotVVM.Framework.Controls.IHtmlWriter)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ItemsControlBase.GetArrayFromDataSource(System.Object)">
            <summary>
            Returns an array of items from the data source. It supports <see cref="T:System.Collections.IEnumerable" />
            and <see cref="T:DotVVM.Framework.Controls.IBaseGridViewDataSet" /> data sources.
            </summary>
            <param name="dataSource">The data source to retrieve items from.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ItemsControlBase.CanGetValue(DotVVM.Framework.Binding.DotvvmProperty)">
            <summary>
            Returns whether it's safe to get a value of the given property.
            </summary>
            <param name="property">The DotVVM property.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ItemsControlBase.GetValueOrDefault(DotVVM.Framework.Binding.DotvvmProperty,System.Boolean)">
            <summary>
            Returns a value of the given property. Or a default value when
            the current value is <c>null</c>.
            </summary>
            <param name="property">The property to get the value of.</param>
            <param name="inherit">Indicates whether to return inherited values.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ItemsControlBase.IsInitiallyVisible">
            <summary>
            Returns whether the control is initially visible. If the result is <c>false</c>
            the control is rendered with <c>display: none;</c> style.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.ItemsEditorBase">
            <summary>
            The base class for BusinessPack controls like AutoComplete, ComboBox and MultiSelect. It registers
            BusinessPack resources in OnInit phase.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ItemsEditorBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.ItemsEditorBase" /> class.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ItemsEditorBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.ItemsEditorBase" /> class.
            </summary>
            <param name="tagName">The name of the wrapping tag.</param>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ItemsEditorBase.Placeholder">
            <summary>
            Gets or sets the text displayed when no item is selected (or when text is empty).
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ItemsEditorBase.ItemTemplate">
            <summary>
            Gets or sets the template used to render each item in the <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ItemsEditorBase.ItemTextBinding">
            <summary>
            Gets or sets the binding which retrieves the text from a <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" /> item.
            It retrieves the whole item by default.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ItemsEditorBase.Enabled">
            <summary>
            Gets or sets whether the control is enabled and can be modified.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ItemsEditorBase.Changed">
            <summary>
            Gets or sets the command that will be triggered when the text (or value) is changed.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ItemsEditorBase.AddAttributesToRender(DotVVM.Framework.Controls.IHtmlWriter,DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ItemsEditorBase.CreateInput">
            <summary>
            Returns an <see cref="T:DotVVM.Utils.HtmlElements.HtmlElement" /> representing an input where user can type text.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ItemsEditorBase.CreateSearchResults">
            <summary>
            Returns an <see cref="T:DotVVM.Utils.HtmlElements.HtmlElement" /> representing a popup containing search results.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ItemsEditorBase.CreateSearchResultItem">
            <summary>
            Returns a <see cref="T:DotVVM.Framework.Controls.DataItemContainer" /> representing a result rendered inside
            the <see cref="M:DotVVM.BusinessPack.Controls.ItemsEditorBase.CreateSearchResults" /> popup.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ItemsEditorBase.GetItemTemplate">
            <summary>
            Returns the <see cref="P:DotVVM.BusinessPack.Controls.ItemsEditorBase.ItemTemplate" /> when it is not <c>null</c>. Otherwise returns a default
            template rendering contents of a property specified by <see cref="P:DotVVM.BusinessPack.Controls.ItemsEditorBase.ItemTextBinding" />.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ItemsEditorBase.GetControlBinding">
            <summary>
            Returns <see cref="T:DotVVM.BusinessPack.Controls.ControlBindingGroup" /> containing values for control's client-side binding.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.ListView">
            <summary>
            Renders a ListView control similar to <see cref="T:DotVVM.Framework.Controls.ListBox" /> control.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ListView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.ListView" /> class.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ListView.DisplayMode">
            <summary>
            Gets or sets the display mode of the ListView control. The default value is <see cref="F:DotVVM.BusinessPack.Controls.ListViewDisplayMode.List" />
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ListView.SelectedValues">
            <summary>
            Gets or sets values of items selected by user.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ListView.MaxSelectedValues">
            <summary>
            Gets or sets the number of values that can be selected.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ListView.RowTemplate">
            <summary>
            Gets or sets the Row template for each ListView item. It is rendered when the <see cref="P:DotVVM.BusinessPack.Controls.ListView.DisplayMode" />
            is set to <see cref="F:DotVVM.BusinessPack.Controls.ListViewDisplayMode.List" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ListView.TileTemplate">
            <summary>
            Gets or sets the Tile template for each ListView item. It is rendered when the
            <see cref="P:DotVVM.BusinessPack.Controls.ListView.DisplayMode" /> is set to <see cref="F:DotVVM.BusinessPack.Controls.ListViewDisplayMode.Tiles" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ListView.EmptyDataTemplate">
            <summary>
            Gets or sets the template which will be displayed when the <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" /> is empty.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ListView.ItemKeyBinding">
            <summary>
            Gets or sets the binding which retrieves the unique key of a <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" /> item.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ListView.ItemValueBinding">
            <summary>
            Gets or sets the binding which retrieves a value from a <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" /> item.
            It retrieves the whole item by default.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.ListView.Changed">
            <summary>
            Gets or sets the command that will be triggered when the selected values are changed.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ListViewDisplayModeExtensions.ToItemClassName(DotVVM.BusinessPack.Controls.ListViewDisplayMode)">
            <summary>
            Returns either <see cref="F:DotVVM.BusinessPack.BusinessPackCss.BpTile" /> or <see cref="F:DotVVM.BusinessPack.BusinessPackCss.BpRow" /> class name.
            </summary>
            <param name="displayMode">The type of ListView layout.</param>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.MaskedTextBox">
            <summary>
            Renders a TextBox control that allows to specify mask to enforce a specific value format.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.MaskedTextBox.Enabled">
            <summary>
            Gets or sets a value indicating whether the control is enabled and can be modified.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.MaskedTextBox.Text">
            <summary>
            Get or set the text entered by user.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.MaskedTextBox.Mask">
            <summary>
            Get or set the mask the text is validated against.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.MaskedTextBox.Definitions">
            <summary>
            Gets or sets the mask patterns used to validate the <see cref="P:DotVVM.BusinessPack.Controls.MaskedTextBox.Text"/>. Setting this property will override the default patterns.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.MaskedTextBox.AdditionalDefinitions">
            <summary>
            Get or set the additional mask patterns. Setting this property will not override the default patterns.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.MaskedValueAttribute.IsMaskedTextBoxValidOnServer(System.String,System.String)">
            <summary>
            Validate textToValidate, by mask with default definitions.
            </summary>
            <param name="mask">Mask with definitions, e.g. 999/999/999.</param>
            <param name="textToValidate">Text which will be validated.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.MaskedValueAttribute.IsMaskedTextBoxValidOnServer(System.String,System.String,System.Collections.Generic.Dictionary{System.Char,DotVVM.BusinessPack.Controls.MaskDefinitionItem})">
            <summary>
            Validate textToValidate, by mask with definitions.
            </summary>
            <param name="mask">Mask with definitions, e.g. 999/999/999.</param>
            <param name="textToValidate">Text which will be validated.</param>
            <param name="definitions">Definitions with which will be validated textToValidate param.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.MaskedValueAttribute.CreateDefaultMaskDefinitions">
            <summary>
            Create default definitions for Mask validators.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.DialogBase">
            <summary>
            The base class for floating dialog-like controls.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.DialogBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.DialogBase" /> class.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DialogBase.IsDisplayed">
            <summary>
            Gets or sets the value indicating whether the dialog is visible.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DialogBase.Width">
            <summary>
            Gets or sets the width of the dialog. The value uses the CSS syntax, e.g. 640px or 80%.
            The default value is 640px.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DialogBase.MinWidth">
            <summary>
            Gets or sets the minimum width of the dialog in pixels. The default value is 250.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DialogBase.Height">
            <summary>
            Gets or sets the height of the dialog. The value uses the CSS syntax, e.g. 640px or 80%.
            It is not set by default.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DialogBase.MinHeight">
            <summary>
            Gets or sets the minimum height of dialog in pixels. The default value is 150.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DialogBase.AnimationDuration">
            <summary>
            Gets or sets how long will the open and close animations run
            (in seconds). If the value is equal to 0, dialog is not animated.
            The default value is 0.25 seconds.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DialogBase.AllowResize">
            <summary>
            Gets or sets whether user is allowed to resize the dialog. 
            It's enabled by default.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DialogBase.InitialPositionLeft">
            <summary>
            Gets or sets initial position from left border. The value uses the CSS syntax, e.g. 200px or 10%.
            It is not set by default.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DialogBase.InitialPositionTop">
            <summary>
            Gets or sets initial position from top border. The value uses the CSS syntax, e.g. 200px or 10%.
            It is not set by default.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DialogBase.CloseOnOutsideClick">
            <summary>
            Gets or sets whether dialog will be closed when user clicks outside the dialog. 
            It's enabled by default.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DialogBase.CloseOnEscape">
            <summary>
            Gets or sets whether dialog will be closed when user hits the Escape key.
            It's enabled by default.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DialogBase.ShowOverlay">
            <summary>
            Gets or sets whether an overlay is displayed under the dialog. 
            It's enabled by default.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DialogBase.DeathZoneSize">
            <summary>
            Gets or sets size (in px) of zone around the dialog borders where modal cannot be moved or resized into.
            The default size is 10px.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DialogBase.ContentTemplate">
            <summary>
            Gets or sets template for content part of dialog.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DialogBase.HeaderText">
            <summary>
            Gets or sets the text of the header part of the dialog. This property cannot be combined with the HeaderTemplate
            property.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DialogBase.HeaderTemplate">
            <summary>
            Gets or sets the template for the header part of the dialog.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DialogBase.FooterTemplate">
            <summary>
            Gets or sets the template for the footer part of the dialog.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.DialogBase.FooterText">
            <summary>
            Gets or sets the text of the footer part of the dialog. This property cannot be combined with the FooterTemplate
            property.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.DialogCloseButton">
            <summary>
            Renders button that changes visible prop of parrent element to false.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.DialogMaximizeButton">
            <summary>
            Renders button that changes visible prop of parrent element to false.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.ModalDialog">
            <summary>
            Renders a modal dialog window inside a page.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.Window">
            <summary>
            Renders modal dialog window.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Window.WindowState">
            <summary>
            Gets or sets the current state of the window.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Window.AllowMove">
            <summary>
            Gets or sets whether user is allowed to change position of the window. 
            It's enabled by default.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.MultiSelect">
            <summary>
            Renders a MultiSelect control similar to <see cref="T:DotVVM.BusinessPack.Controls.ComboBox" /> control. It allows to select multiple values.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.MultiSelect.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.MultiSelect" /> class.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.MultiSelect.Text">
            <summary>
            Gets or sets the text value of the control that is used mainly for the LoadItems command.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.MultiSelect.SelectedValues">
            <summary>
            Gets or sets values of the items selected by user.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.MultiSelect.SelectedValueTemplate">
            <summary>
            Gets or sets the template for each MultiSelect value.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.MultiSelect.UnselectIconCssClass">
            <summary>
            Gets or sets the CSS class for the icon displayed on the unselect button.
            The default value is <see cref="F:DotVVM.BusinessPack.Controls.IconType.FaClose" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.MultiSelect.LoadItemsMode">
            <summary>
            Gets or sets how are items returned by the <see cref="P:DotVVM.BusinessPack.Controls.MultiSelect.LoadItems"/> command processed. 
            They can either be merged with existing items in the <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" />; or they can replace them.
            The default value is <see cref="F:DotVVM.BusinessPack.Controls.LoadItemsMode.Merge"/>.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.MultiSelect.LoadItems">
            <summary>
            Gets or sets a function used to load additional items from server. For example, it is used
            to search for items on server-side.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.MultiSelect.AllowNewItems">
            <summary>
            Gets or sets whether it is allowed to create new items from the entered text.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.NumericUpDown">
            <summary>
            Renders an &lt;input&gt; element with buttons on the side that increase or decrease the value.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.NumericUpDown.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.NumericUpDown" /> class.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.NumericUpDown.Value">
            <summary>
            Gets or sets the value displayed in the control.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.NumericUpDown.FormatString">
            <summary>
            Gets or sets format string used to display the <see cref="P:DotVVM.BusinessPack.Controls.NumericUpDown.Value" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.NumericUpDown.MinValue">
            <summary>
            Gets or sets the minimum the <see cref="P:DotVVM.BusinessPack.Controls.NumericUpDown.Value" /> must be greater than or equal to.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.NumericUpDown.MaxValue">
            <summary>
            Gets or sets the maximum the <see cref="P:DotVVM.BusinessPack.Controls.NumericUpDown.Value" /> must be less than or equal to.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.NumericUpDown.Step">
            <summary>
            Gets or sets a value used to increment or decrement the <see cref="P:DotVVM.BusinessPack.Controls.NumericUpDown.Value" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.NumericUpDown.DecreaseIconCssClass">
            <summary>
            Gets or sets the CSS class for the icon displayed on the decrease button.
            The default value is <see cref="F:DotVVM.BusinessPack.Controls.IconType.FaMinus" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.NumericUpDown.IncreaseIconCssClass">
            <summary>
            Gets or sets the CSS class for the icon displayed on the increase button.
            The default value is <see cref="F:DotVVM.BusinessPack.Controls.IconType.FaPlus" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.NumericUpDown.Enabled">
            <summary>
            Gets or sets whether the control is enabled and can be modified.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.NumericUpDown.Changed">
            <summary>
            Gets or sets the command that will be triggered when the value is changed.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.Panel">
            <summary>
            Renders a panel.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Panel.HeaderText">
            <summary>
            Gets or sets the text of the header part of the panel. This property cannot be combined with the HeaderTemplate property.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Panel.HeaderTemplate">
            <summary>
            Gets or sets the template for the header part of the panel.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Panel.ContentTemplate">
            <summary>
            Gets or sets the template for the body part of the panel.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Panel.FooterText">
            <summary>
            Gets or sets the text of the footer part of the dialog. This property cannot be combined with the FooterTemplate property.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Panel.FooterTemplate">
            <summary>
            Gets or sets the template for the footer part of the panel.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.RadioButtonList">
            <summary>
            Renders a RadioButtonList control displaying a list of radio buttons.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.RadioButtonList.SelectedValue">
            <summary>
            Gets or sets the value of the first item checked by user.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.RadioButtonList.GroupName">
            <summary>
            Gets or sets a unique name identifying this group of radio buttons. A random name is generated by default.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.RadioButton">
            <summary>
            Renders the HTML radio button.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.RadioButton.RenderEmptyLabel">
            <summary>
            Gets or sets whether to render an empty &lt;label&gt; element when the <see cref="P:DotVVM.Framework.Controls.CheckableControlBase.Text" /> is empty.
            It allows to use custom RadioButton themes. The default value is <c>true</c>.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.RadioButton.OnInit(DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.RadioButton.AddAttributesToRender(DotVVM.Framework.Controls.IHtmlWriter,DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.RadioButton.AddAttributesToInput(DotVVM.Framework.Controls.IHtmlWriter)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.RadioButton.RenderBeginTag(DotVVM.Framework.Controls.IHtmlWriter,DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.RadioButton.RenderContents(DotVVM.Framework.Controls.IHtmlWriter,DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.RadioButton.RenderEndTag(DotVVM.Framework.Controls.IHtmlWriter,DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.Rating">
            <summary>
            Renders a horizontal set of points representing a rating. If enabled, the user can select one of these points to set the rating.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Rating.Changed">
            <summary>
            Gets or sets the command that is called when <see cref="P:DotVVM.BusinessPack.Controls.Rating.Value"/> changes.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Rating.AllowPreviewOnHover">
            <summary>
            Gets or sets whether to display a preview of the selected value when user hovers over the control.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Rating.AllowHalfPoints">
            <summary>
            Gets or sets whether to display half points and allow the user to select half point values.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Rating.Enabled">
            <summary>
            Gets or sets whether the control responds to user actions.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Rating.FullPointIconCssClass">
            <summary>
            Gets or sets the CSS class used for full points.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Rating.HalfPointIconCssClass">
            <summary>
            Gets or sets the CSS class used for half points.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Rating.EmptyPointIconCssClass">
            <summary>
            Gets or sets the CSS class used for empty points.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Rating.MaxValue">
            <summary>
            Gets or sets the maximum value that the <see cref="P:DotVVM.BusinessPack.Controls.Rating.Value"/> can reach.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Rating.Value">
            <summary>
            Gets or sets the current value of the <see cref="T:DotVVM.BusinessPack.Controls.Rating"/>.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ResolvedControlExtensions.IsEmpty(DotVVM.Framework.Compilation.ControlTree.Resolved.ResolvedControl)">
            <summary>
            Returns <c>true</c> when the inner content of the control is not set; otherwise returns <c>false</c>.
            </summary>
            <param name="control">The resolved DotVVM control.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ResolvedControlExtensions.IsPropertySet(DotVVM.Framework.Compilation.ControlTree.Resolved.ResolvedControl,DotVVM.Framework.Binding.DotvvmProperty)">
            <summary>
            Determines whether the property is set on the specified DotVVM control.
            </summary>
            <param name="control">The resolved DotVVM control.</param>
            <param name="property">The property to check.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.ResourceManagerExtensions.AddBusinessPackRequiredResources(DotVVM.Framework.ResourceManagement.ResourceManager)">
            <summary>
            Adds the resources required by BusinessPack components.
            </summary>
            <param name="resourceManager">The resource manager.</param>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.RichTextBox">
            <summary>
            Renders a RichTextBox control similar to HTML &lt;textarea&gt; element with rich text editing capabilities.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.RichTextBox.#ctor">
            <summary>
            Initializes a new instance of hte <see cref="T:DotVVM.BusinessPack.Controls.RichTextBox" /> class.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.RichTextBox.Html">
            <summary>
            Gets or sets the HTML content of the editor.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.RichTextBox.Placeholder">
            <summary>
            Gets or sets the text displayed when text is empty.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.RichTextBox.Changed">
            <summary>
            Gets or sets the command that will be triggered when the control text (or value) is changed.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.RichTextBox.Enabled">
            <summary>
            Gets or sets a value indicating whether the editor's content can be modified.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.SelectorBase">
            <summary>
            The base class for BusinessPack controls selecting on or multiple values from DataSource.
            It registers BusinessPack resources in OnInit phase.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.SelectorBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.SelectorBase" /> class.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.SelectorBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.SelectorBase" /> class.
            </summary>
            <param name="tagName">The name of the wrapping tag.</param>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.SelectorBase.ItemKeyBinding">
            <summary>
            Gets or sets the binding which retrieves the unique key of a <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" /> item.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.SelectorBase.ItemValueBinding">
            <summary>
            Gets or sets the binding which retrieves a value from a <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" /> property.
            It retrieves the whole item by default.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.SelectorBase.GetControlBinding">
            <summary>
            Returns <see cref="T:DotVVM.BusinessPack.Controls.ControlBindingGroup" /> containing values for control's binding.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.RangeSlider">
            <summary>
            Renders a Slider control that allows the user to select a range of numeric values on a scale.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.RangeSlider.SelectedStartValue">
            <summary>
            Gets or sets the start of the range selected in the control.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.RangeSlider.SelectedEndValue">
            <summary>
            Gets or sets the end of the range selected in the control.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.Slider">
            <summary>
            Renders a Slider control that allows the user to select a single numeric value on a scale.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.Slider.SelectedValue">
            <summary>
            Gets or sets the value selected in the control.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.SliderBase">
            <summary>
            A base class for Slider controls.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.SliderBase.Enabled">
            <summary>
            Gets or sets whether the slider is enabled.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.SliderBase.Step">
            <summary>
            Gets or sets the minimum step for increasing or decreasing the value.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.SliderBase.MinValue">
            <summary>
            Gets or sets the minimum value of the slider.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.SliderBase.MaxValue">
            <summary>
            Gets or sets the maximum value of the slider.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.SliderBase.Changed">
            <summary>
            Gets or sets the command that will be triggered hen the value changes.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.TabControl">
            <summary>
            Renders a collection of tabs with specific contents.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.TabControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.TabControl" /> class.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TabControl.Tabs">
            <summary>
            Gets or sets a collection of tabs rendered inside.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TabControl.ActiveTabKey">
            <summary>
            Gets or sets the key of a tab that is currently active.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TabControl.TabHeaderTemplate">
            <summary>
            Gets or sets the template for headers of tabs. This property is used when tabs
            are loaded from the <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" /> property.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TabControl.TabContentTemplate">
            <summary>
            Gets or sets the template rendering contents of tabs. This property is used when tabs
            are loaded from the <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" /> property.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TabControl.TabKeyBinding">
            <summary>
            Gets or sets the binding which retrieves the unique key of a tab from <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TabControl.TabHeaderTextBinding">
            <summary>
            Gets or sets the binding which retrieves the text of the header a tab from <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TabControl.TabIsActiveBinding">
            <summary>
            Gets or sets the binding which determines whether a tab from <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" />
            is active or not. Only one tab can be active at the same time.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TabControl.TabEnabledBinding">
            <summary>
            Gets or sets the binding which retrieves whether a tab from <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" />
            is enabled and can be activated.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TabControl.TabVisibleBinding">
            <summary>
            Gets or sets the binding which retrieves whether a tab from
            <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" /> is visible.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TabControl.ActiveTabChanged">
            <summary>
            Gets or sets the command that will be triggered when the active tab is changed.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.TabControl.OnLoad(DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.TabControl.OnPreRender(DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.TabControl.AddAttributesToRender(DotVVM.Framework.Controls.IHtmlWriter,DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.TabControl.RenderContents(DotVVM.Framework.Controls.IHtmlWriter,DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.TabItem">
            <summary>
            Represents a tab rendered inside the <see cref="T:DotVVM.BusinessPack.Controls.TabControl" />.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.TabItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.TabItem" /> class.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TabItem.Key">
            <summary>
            Gets or sets a unique key identifying this <see cref="T:DotVVM.BusinessPack.Controls.TabControl" /> item.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TabItem.HeaderText">
            <summary>
            Gets or sets the text of the header of the tab. This property cannot be
            combined with the <see cref="P:DotVVM.BusinessPack.Controls.TabItem.HeaderTemplate" /> property.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TabItem.HeaderTemplate">
            <summary>
            Gets or sets a template for the header of the tab. This property cannot be
            combined with the <see cref="P:DotVVM.BusinessPack.Controls.TabItem.HeaderText" /> property.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TabItem.ContentTemplate">
            <summary>
            Gets or sets a template rendering contents of the tab.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TabItem.Enabled">
            <summary>
            Gets or sets whether the tab is enabled and can be activated.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.TabItem.GetHeaderTemplate">
            <summary>
            Returns an <see cref="T:DotVVM.Framework.Controls.ITemplate" /> rendering header of the tab.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.TabItem.OnLoad(DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.TabItem.AddAttributesToRender(DotVVM.Framework.Controls.IHtmlWriter,DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.TabItemJsonConverter">
            <summary>
            Converts <see cref="T:DotVVM.BusinessPack.Controls.TabItem" /> to it's JSON representation.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TabItemJsonConverter.CanRead">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.TabItemJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.TabItemJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.TabItemJsonConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.TextBox">
            <summary>
            Renders a HTML text input control.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.TextBox.OnInit(DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.TextBox.AddAttributesToRender(DotVVM.Framework.Controls.IHtmlWriter,DotVVM.Framework.Hosting.IDotvvmRequestContext)">
            <inheritdoc />
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.TextView">
            <summary>
            Converts a multi-line texts to HTML with keeping the line endings. Detects URL and e-mail addresses and converts them
            to hyperlinks. The text is HTML encoded to prevent XSS attacks.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TextView.Text">
            <summary>
            Gets or sets the text displayed in the control.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TextView.HyperlinkTarget">
            <summary>
            Gets or sets target attribute on links. The default value is _blank.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Controls.TreeView">
            <summary>
            Renders a TreeView control displaying items in tree-like structure.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.Controls.TreeView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.Controls.TreeView" /> class.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TreeView.SelectedValues">
            <summary>
            Gets or sets values of items selected by user.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TreeView.ExpandIconCssClass">
            <summary>
            Gets or sets the CSS class for the icon displayed on the expand button.
            The default value is <see cref="F:DotVVM.BusinessPack.Controls.IconType.FaPlusSquareO" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TreeView.CollapseIconCssClass">
            <summary>
            Gets or sets the CSS class for the icon displayed on the collapse button.
            The default value is <see cref="F:DotVVM.BusinessPack.Controls.IconType.FaMinusSquareO" />.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TreeView.ItemTemplate">
            <summary>
            Gets or sets the template for each TreeView item.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TreeView.EmptyDataTemplate">
            <summary>
            Gets or sets the template which will be displayed when the <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" /> is empty.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TreeView.ItemKeyBinding">
            <summary>
            Gets or sets the binding which retrieves the unique key of a <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" /> item.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TreeView.ItemValueBinding">
            <summary>
            Gets or sets the binding which retrieves a value from a <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" /> item.
            It retrieves the whole item by default.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TreeView.ItemHasChildrenBinding">
            <summary>
            Gets or sets the binding which retrieves a value indicating whether a <see cref="P:DotVVM.Framework.Controls.ItemsControl.DataSource" />
            item has any children.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TreeView.CheckBoxMode">
            <summary>
            Gets or sets a value indicating where to show checkboxes. They are not displayed by default.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TreeView.AutoCheckChildren">
            <summary>
            Gets or sets whether to automatically check all children when an item is checked.
            The default value is <c>true</c>.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TreeView.LoadChildren">
            <summary>
            Gets or sets a function used to load descendants of an item being expanded.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Controls.TreeView.Changed">
            <summary>
            Gets or sets the command that will be triggered when the selected values are changed.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.Localization">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Localization.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Localization.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Localization.ColorPicker_UnselectColorText">
            <summary>
              Looks up a localized string similar to No color.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Localization.FileUpload_DragFilesHereText">
            <summary>
              Looks up a localized string similar to or drag them here..
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Localization.FileUpload_GenericErrorText">
            <summary>
              Looks up a localized string similar to Upload has failed..
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.Localization.FileUpload_UploadButtonText">
            <summary>
              Looks up a localized string similar to Select files.
            </summary>
        </member>
        <member name="T:DotVVM.BusinessPack.RgbaColor">
            <summary>
            Represents an RGBA (red, green, blue, alpha) color.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.RgbaColor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.RgbaColor" /> class.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.RgbaColor.#ctor(System.Byte,System.Byte,System.Byte,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:DotVVM.BusinessPack.RgbaColor" /> class.
            </summary>
            <param name="red">The red channel.</param>
            <param name="green">The green channel.</param>
            <param name="blue">The blue channel.</param>
            <param name="alpha">The alpha channel.</param>
        </member>
        <member name="P:DotVVM.BusinessPack.RgbaColor.Red">
            <summary>
            Gets or sets the red channel.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.RgbaColor.Green">
            <summary>
            Gets or sets the green channel.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.RgbaColor.Blue">
            <summary>
            Gets or sets the blue channel.
            </summary>
        </member>
        <member name="P:DotVVM.BusinessPack.RgbaColor.Alpha">
            <summary>
            Gets or sets the alpha channel.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.RgbaColor.ParseHexColor(System.String)">
            <summary>
            Converts the #RRGGBBAA HEX color to its <see cref="T:DotVVM.BusinessPack.RgbaColor" /> equivalent.
            </summary>
            <param name="value">A string containing HEX color.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> is <c>null</c>.</exception>
            <exception cref="T:System.FormatException">The <paramref name="value" /> doesn't contain a valid HEX color value.</exception>
        </member>
        <member name="M:DotVVM.BusinessPack.RgbaColor.ParseHexColor(System.String,System.Boolean)">
            <summary>
            Converts the #RRGGBBAA HEX color to its <see cref="T:DotVVM.BusinessPack.RgbaColor" /> equivalent.
            </summary>
            <param name="value">A string containing HEX color.</param>
            <param name="allowAlphaChannel">Indicates whether HEX colors with alpha channel are allowed.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> is <c>null</c>.</exception>
            <exception cref="T:System.FormatException">The <paramref name="value" /> doesn't contain a valid HEX color value.</exception>
        </member>
        <member name="M:DotVVM.BusinessPack.RgbaColor.TryParseHexColor(System.String,DotVVM.BusinessPack.RgbaColor@)">
            <summary>
            Converts the #RRGGBBAA HEX color to its <see cref="T:DotVVM.BusinessPack.RgbaColor" /> equivalent.
            A return value indicates whether the conversion succeeded.
            </summary>
            <param name="value">A string containing HEX color.</param>
            <param name="result">
            When this method returns, contains the <see cref="T:DotVVM.BusinessPack.RgbaColor" /> equivalent of the HEX color contained in
            the <paramref name="value" />, if the conversion succeeded, or <c>null</c> if the conversion failed.
            </param>
        </member>
        <member name="M:DotVVM.BusinessPack.RgbaColor.TryParseHexColor(System.String,System.Boolean,DotVVM.BusinessPack.RgbaColor@)">
            <summary>
            Converts the #RRGGBBAA HEX color to its <see cref="T:DotVVM.BusinessPack.RgbaColor" /> equivalent.
            A return value indicates whether the conversion succeeded.
            </summary>
            <param name="value">A string containing HEX color.</param>
            <param name="allowAlphaChannel">Indicates whether HEX colors with alpha channel are allowed.</param>
            <param name="result">
            When this method returns, contains the <see cref="T:DotVVM.BusinessPack.RgbaColor" /> equivalent of the HEX color contained in
            the <paramref name="value" />, if the conversion succeeded, or <c>null</c> if the conversion failed.
            </param>
        </member>
        <member name="M:DotVVM.BusinessPack.RgbaColor.op_Equality(DotVVM.BusinessPack.RgbaColor,DotVVM.BusinessPack.RgbaColor)">
            <summary>
            Returns whether the two RGBA colors are equal.
            </summary>
            <param name="color1">The first color to compare.</param>
            <param name="color2">The second color to compare.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.RgbaColor.op_Inequality(DotVVM.BusinessPack.RgbaColor,DotVVM.BusinessPack.RgbaColor)">
            <summary>
            Returns whether the two RGBA colors are not equal.
            </summary>
            <param name="color1">The first color to compare.</param>
            <param name="color2">The second color to compare.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.RgbaColor.Equals(DotVVM.BusinessPack.RgbaColor)">
            <summary>
            Returns whether this RGBA color is equal to the other color.
            </summary>
            <param name="other">The other RGBA color.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.RgbaColor.Equals(System.Object)">
            <summary>
            Returns whether this RGBA color is equal to the other object.
            </summary>
            <param name="obj">The other object.</param>
        </member>
        <member name="M:DotVVM.BusinessPack.RgbaColor.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.RgbaColor.ToHexColor">
            <summary>
            Returns this RGBA color converted to #RRGGBBAA color value.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.RgbaColor.ToCssColor">
            <summary>
            Returns this RGBA color converted to CSS color value.
            </summary>
        </member>
        <member name="M:DotVVM.BusinessPack.RgbaColor.ToString">
            <summary>
            Returns a string representation of this RGBA color.
            </summary>
        </member>
        <member name="M:DotVVM.Framework.Configuration.DotvvmConfigurationExtensions.AddBusinessPackConfiguration(DotVVM.Framework.Configuration.DotvvmConfiguration)">
            <summary>
            Extends the DotVVM configuration with BusinessPack controls and features.
            </summary>
        </member>
    </members>
</doc>
